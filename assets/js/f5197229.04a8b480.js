"use strict";(self.webpackChunkswartzdb_docs=self.webpackChunkswartzdb_docs||[]).push([[110],{4075:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>a,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"utility/get-keys","title":"Get Keys Function","description":"The getKeys function in SwartzDB allows users to retrieve all unique keys (columns) present in a database file, even if some columns exist only in specific records.","source":"@site/docs/utility/get-keys.md","sourceDirName":"utility","slug":"/utility/get-keys","permalink":"/docs/utility/get-keys","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Utility Functions","permalink":"/docs/category/utility-functions"},"next":{"title":"Encall Function","permalink":"/docs/utility/encall"}}');var r=n(4848),i=n(8453);const o={sidebar_position:1},l="Get Keys Function",a={},c=[{value:"<strong>How <code>getKeys</code> Works</strong>",id:"how-getkeys-works",level:2},{value:"<strong>Why is <code>getKeys</code> Useful?</strong>",id:"why-is-getkeys-useful",level:2},{value:"<strong>Example Usage</strong>",id:"example-usage",level:2},{value:"<strong>Database Data</strong>",id:"database-data",level:3},{value:"<strong>Calling <code>getKeys</code></strong>",id:"calling-getkeys",level:3},{value:"<strong>Output</strong>",id:"output",level:3},{value:"<strong>Conclusion</strong>",id:"conclusion",level:2}];function d(e){const s={br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.header,{children:(0,r.jsx)(s.h1,{id:"get-keys-function",children:"Get Keys Function"})}),"\n",(0,r.jsxs)(s.p,{children:["The ",(0,r.jsx)(s.code,{children:"getKeys"})," function in SwartzDB allows users to ",(0,r.jsx)(s.strong,{children:"retrieve all unique keys (columns) present in a database file"}),", even if some columns exist only in specific records."]}),"\n",(0,r.jsx)(s.hr,{}),"\n",(0,r.jsx)(s.h2,{id:"how-getkeys-works",children:(0,r.jsxs)(s.strong,{children:["How ",(0,r.jsx)(s.code,{children:"getKeys"})," Works"]})}),"\n",(0,r.jsxs)(s.p,{children:["\ud83d\udd39 Reads the database file and extracts ",(0,r.jsx)(s.strong,{children:"all possible keys"})," from the stored data.",(0,r.jsx)(s.br,{}),"\n","\ud83d\udd39 Recursively scans through ",(0,r.jsx)(s.strong,{children:"nested arrays"}),", ensuring no key is left out.",(0,r.jsx)(s.br,{}),"\n","\ud83d\udd39 Removes ",(0,r.jsx)(s.strong,{children:"duplicate keys"}),", so each key appears only once in the output.",(0,r.jsx)(s.br,{}),"\n","\ud83d\udd39 Returns a ",(0,r.jsx)(s.strong,{children:"list of column names"})," that exist in the dataset."]}),"\n",(0,r.jsx)(s.hr,{}),"\n",(0,r.jsx)(s.h2,{id:"why-is-getkeys-useful",children:(0,r.jsxs)(s.strong,{children:["Why is ",(0,r.jsx)(s.code,{children:"getKeys"})," Useful?"]})}),"\n",(0,r.jsxs)(s.p,{children:["\u2705 ",(0,r.jsx)(s.strong,{children:"Handles inconsistent data structures"})," \u2013 Some records might have extra fields, and this function ensures visibility of all columns.",(0,r.jsx)(s.br,{}),"\n","\u2705 ",(0,r.jsx)(s.strong,{children:"Helps with dynamic queries"})," \u2013 Knowing all available keys allows users to ",(0,r.jsx)(s.strong,{children:"filter, search, or modify"})," data efficiently.",(0,r.jsx)(s.br,{}),"\n","\u2705 ",(0,r.jsx)(s.strong,{children:"Supports nested structures"})," \u2013 Works with multi-level arrays, extracting keys in a structured format."]}),"\n",(0,r.jsx)(s.hr,{}),"\n",(0,r.jsx)(s.h2,{id:"example-usage",children:(0,r.jsx)(s.strong,{children:"Example Usage"})}),"\n",(0,r.jsx)(s.h3,{id:"database-data",children:(0,r.jsx)(s.strong,{children:"Database Data"})}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-json",children:'[\r\n    {"id": 1, "name": "Alice", "age": 25, "city": "New York"},\r\n    {"id": 2, "name": "Bob", "age": 30},\r\n    {"id": 3, "name": "Charlie", "country": "USA"}\r\n]\n'})}),"\n",(0,r.jsx)(s.h3,{id:"calling-getkeys",children:(0,r.jsxs)(s.strong,{children:["Calling ",(0,r.jsx)(s.code,{children:"getKeys"})]})}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-php",children:'$keys = $sdb->getKeys("users");\r\nprint_r($keys);\n'})}),"\n",(0,r.jsx)(s.h3,{id:"output",children:(0,r.jsx)(s.strong,{children:"Output"})}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-php",children:'["id", "name", "age", "city", "country"]\n'})}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:["The ",(0,r.jsx)(s.code,{children:"city"})," and ",(0,r.jsx)(s.code,{children:"country"})," columns were created only for some records, but ",(0,r.jsx)(s.code,{children:"getKeys"})," ensures they are visible."]}),"\n"]}),"\n",(0,r.jsx)(s.hr,{}),"\n",(0,r.jsx)(s.h2,{id:"conclusion",children:(0,r.jsx)(s.strong,{children:"Conclusion"})}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"getKeys"})," provides a ",(0,r.jsx)(s.strong,{children:"complete overview of all columns"})," in the database, making it easier to work with dynamic datasets. This function is essential for users who need to ",(0,r.jsx)(s.strong,{children:"explore, analyze, or manipulate"})," data efficiently."]})]})}function u(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>o,x:()=>l});var t=n(6540);const r={},i=t.createContext(r);function o(e){const s=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function l(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),t.createElement(i.Provider,{value:s},e.children)}}}]);