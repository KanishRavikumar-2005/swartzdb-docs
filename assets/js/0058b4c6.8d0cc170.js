"use strict";(self.webpackChunkswartzdb_docs=self.webpackChunkswartzdb_docs||[]).push([[849],{6164:e=>{e.exports=JSON.parse('{"version":{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"SwartzDB","href":"/docs/intro","docId":"intro","unlisted":false},{"type":"category","label":"Getting Started","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Clone SwartzDB","href":"/docs/getting-started/add-folder","docId":"getting-started/add-folder","unlisted":false},{"type":"link","label":"Secure SwartzDB Folder","href":"/docs/getting-started/secure-folder","docId":"getting-started/secure-folder","unlisted":false},{"type":"link","label":"Modify Encryption Keys","href":"/docs/getting-started/modify-keys","docId":"getting-started/modify-keys","unlisted":false},{"type":"link","label":"Include Connection","href":"/docs/getting-started/require-file","docId":"getting-started/require-file","unlisted":false},{"type":"link","label":"Call SwartzDB Class","href":"/docs/getting-started/call-the-class","docId":"getting-started/call-the-class","unlisted":false}],"href":"/docs/category/getting-started"},{"type":"category","label":"Database Control Functions","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Create Database","href":"/docs/db-control/create","docId":"db-control/create","unlisted":false},{"type":"link","label":"Backup Database","href":"/docs/db-control/backup","docId":"db-control/backup","unlisted":false},{"type":"link","label":"Check Database Integrity","href":"/docs/db-control/integrity","docId":"db-control/integrity","unlisted":false},{"type":"link","label":"Restore Database","href":"/docs/db-control/restore","docId":"db-control/restore","unlisted":false},{"type":"link","label":"Delete Database","href":"/docs/db-control/delete","docId":"db-control/delete","unlisted":false}],"href":"/docs/category/database-control-functions"},{"type":"category","label":"Data Access Functions","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Get Function","href":"/docs/data-access/get","docId":"data-access/get","unlisted":false},{"type":"link","label":"Put Function","href":"/docs/data-access/put","docId":"data-access/put","unlisted":false},{"type":"link","label":"Add Function","href":"/docs/data-access/add","docId":"data-access/add","unlisted":false},{"type":"link","label":"Get Row Function","href":"/docs/data-access/get-row","docId":"data-access/get-row","unlisted":false},{"type":"link","label":"Add Row Function","href":"/docs/data-access/add-row","docId":"data-access/add-row","unlisted":false},{"type":"link","label":"Update Row Function","href":"/docs/data-access/update-row","docId":"data-access/update-row","unlisted":false},{"type":"link","label":"Remove Row Function","href":"/docs/data-access/remove-row","docId":"data-access/remove-row","unlisted":false}],"href":"/docs/category/data-access-functions"},{"type":"category","label":"Data Manipulation Functions","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Filter Function","href":"/docs/data-manipulation/filter","docId":"data-manipulation/filter","unlisted":false},{"type":"link","label":"Aggregate Function","href":"/docs/data-manipulation/aggregate","docId":"data-manipulation/aggregate","unlisted":false}],"href":"/docs/category/data-manipulation-functions"},{"type":"category","label":"Utility Functions","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Get Keys Function","href":"/docs/utility/get-keys","docId":"utility/get-keys","unlisted":false},{"type":"link","label":"Encall Function","href":"/docs/utility/encall","docId":"utility/encall","unlisted":false},{"type":"link","label":"Decall Function","href":"/docs/utility/decall","docId":"utility/decall","unlisted":false},{"type":"link","label":"IDgen Function","href":"/docs/utility/idgen","docId":"utility/idgen","unlisted":false}],"href":"/docs/category/utility-functions"}]},"docs":{"data-access/add":{"id":"data-access/add","title":"Add Function","description":"The add function in SwartzDB is used to append multiple rows of data to a file without removing existing records. Unlike put, which overwrites the file, add ensures that new data is merged into the existing dataset.","sidebar":"tutorialSidebar"},"data-access/add-row":{"id":"data-access/add-row","title":"Add Row Function","description":"The addrow function allows you to **append new data** to an existing database without overwriting previous records. Unlike put, which replaces the entire database, addrow ensures that old data remains intact while adding new entries.","sidebar":"tutorialSidebar"},"data-access/get":{"id":"data-access/get","title":"Get Function","description":"SwartzDB provides the get function to fetch stored data from the database. Since SwartzDB stores data in encrypted JSON format, the get function automatically decrypts and decodes the data before returning it.","sidebar":"tutorialSidebar"},"data-access/get-row":{"id":"data-access/get-row","title":"Get Row Function","description":"The get_row function allows you to filter and retrieve specific rows from the database based on given conditions. This is useful when searching for records that match certain criteria.","sidebar":"tutorialSidebar"},"data-access/put":{"id":"data-access/put","title":"Put Function","description":"The put function in SwartzDB is used to store data in the database. It takes the input, encrypts it for security, and writes it to the specified .sdb file.","sidebar":"tutorialSidebar"},"data-access/remove-row":{"id":"data-access/remove-row","title":"Remove Row Function","description":"The remove_row function allows you to delete records from the database based on specific conditions. This is useful when cleaning up old data, removing inactive users, or filtering out irrelevant records.","sidebar":"tutorialSidebar"},"data-access/update-row":{"id":"data-access/update-row","title":"Update Row Function","description":"The update_row function allows you to modify existing records in the database based on specific conditions. This is useful when updating user data, modifying settings, or making bulk edits.","sidebar":"tutorialSidebar"},"data-manipulation/aggregate":{"id":"data-manipulation/aggregate","title":"Aggregate Function","description":"The aggregate function in SwartzDB is used to perform calculations on a list of numeric values. It works seamlessly with the filter function when extracting numeric data.","sidebar":"tutorialSidebar"},"data-manipulation/filter":{"id":"data-manipulation/filter","title":"Filter Function","description":"The filter function in SwartzDB allows selecting, transforming, and formatting specific fields from a dataset while applying operations like concatenation, case conversion, and arithmetic calculations.","sidebar":"tutorialSidebar"},"db-control/backup":{"id":"db-control/backup","title":"Backup Database","description":"SwartzDB provides a backup function that allows you to create a copy of an existing database file. This feature is useful for data recovery, versioning, and preventing accidental data loss.","sidebar":"tutorialSidebar"},"db-control/create":{"id":"db-control/create","title":"Create Database","description":"SwartzDB allows you to create a new database file using the create function. This function generates an empty .sdb file in the specified storage directory.","sidebar":"tutorialSidebar"},"db-control/delete":{"id":"db-control/delete","title":"Delete Database","description":"SwartzDB provides a delete function that allows you to remove database files permanently. This function can be used to delete both main database files and backup files.","sidebar":"tutorialSidebar"},"db-control/integrity":{"id":"db-control/integrity","title":"Check Database Integrity","description":"SwartzDB includes an integrity function that helps verify whether a database file is valid and readable. This function is useful for detecting corruption.","sidebar":"tutorialSidebar"},"db-control/restore":{"id":"db-control/restore","title":"Restore Database","description":"SwartzDB provides a restore function that allows you to recover a previously backed-up database. This is essential in cases where the main database gets corrupted, accidentally deleted, or modified incorrectly.","sidebar":"tutorialSidebar"},"getting-started/add-folder":{"id":"getting-started/add-folder","title":"Clone SwartzDB","description":"In this first step, you will clone the SwartzDB repository from GitHub. Cloning the repository copies all the necessary files to your local machine, allowing you to modify and integrate SwartzDB into your project.","sidebar":"tutorialSidebar"},"getting-started/call-the-class":{"id":"getting-started/call-the-class","title":"Call SwartzDB Class","description":"After including the connect.php file, you can start using SwartzDB by initializing its class.","sidebar":"tutorialSidebar"},"getting-started/modify-keys":{"id":"getting-started/modify-keys","title":"Modify Encryption Keys","description":"Before using SwartzDB, you must update its configuration to secure your data. Open the /SwartzDB/config.php file and modify the following parameters:","sidebar":"tutorialSidebar"},"getting-started/require-file":{"id":"getting-started/require-file","title":"Include Connection","description":"This step involves including the connection file in your PHP code. The connect.php file is responsible for establishing the connection to your SwartzDB, making its functionalities available in your project.","sidebar":"tutorialSidebar"},"getting-started/secure-folder":{"id":"getting-started/secure-folder","title":"Secure SwartzDB Folder","description":"Securing the SwartzDB directory is important to prevent unauthorized access to its sensitive files. You can achieve this by creating or updating the .htaccess file in the /SwartzDB directory.","sidebar":"tutorialSidebar"},"intro":{"id":"intro","title":"SwartzDB","description":"Lightweight JSON-Based Database for Web Apps","sidebar":"tutorialSidebar"},"utility/decall":{"id":"utility/decall","title":"Decall Function","description":"The decall function in SwartzDB is used to decrypt an .sdb database file and convert it back into a readable JSON file.","sidebar":"tutorialSidebar"},"utility/encall":{"id":"utility/encall","title":"Encall Function","description":"The encall function in SwartzDB allows users to encrypt a pre-existing JSON file and convert it into a secure .sdb database file.","sidebar":"tutorialSidebar"},"utility/get-keys":{"id":"utility/get-keys","title":"Get Keys Function","description":"The getKeys function in SwartzDB allows users to retrieve all unique keys (columns) present in a database file, even if some columns exist only in specific records.","sidebar":"tutorialSidebar"},"utility/idgen":{"id":"utility/idgen","title":"IDgen Function","description":"The idgen function is a simple and efficient way to generate random IDs, making it useful for creating unique object IDs for each row in a database.","sidebar":"tutorialSidebar"}}}}')}}]);